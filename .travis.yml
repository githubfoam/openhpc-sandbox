---
sudo: required
dist: bionic
notifications:
  slack:
    on_failure: always

fleet_script_gnufortran_tasks : &fleet_script_gnufortran_tasks
      script:
        - sudo apt-get install -qqy gfortran valgrind # fortran90 valgrind profilers.
        - gfortran --version
        - echo "===============without openMP==========================="
        - echo "=========================================="
        - pushd $(pwd)
        - cd lab2
        - make
        - echo "=========================================="
        - echo "=========================================="
        - popd
fleet_script_tasks : &fleet_script_tasks
      script:
        - python --version
fleet_install_tasks : &fleet_install_tasks
      install:
        - pip install -r requirements.txt


matrix:
  fast_finish: true
  include:

    - name: "gnu fortran Python 3.7 on bionic amd64"
      os: linux
      dist: bionic
      arch: amd64
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
      <<: *fleet_install_tasks
      <<: *fleet_script_tasks
      <<: *fleet_script_gnufortran_tasks
      after_success:
        - deactivate

    - name: "gnu fortran Python 3.7 on bionic arm64"
      os: linux
      dist: bionic
      arch: arm64
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
      <<: *fleet_install_tasks
      <<: *fleet_script_tasks
      <<: *fleet_script_gnufortran_tasks
      after_success:
        - deactivate

    - name: "gnu fortran Python 3.7 on bionic ppc64le"
      os: linux
      arch: ppc64le
      dist: bionic
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
      <<: *fleet_install_tasks
      <<: *fleet_script_tasks
      <<: *fleet_script_gnufortran_tasks
      after_success:
        - deactivate

    - name: "gnu fortran Python 3.7 on bionic s390x"
      os: linux
      arch: s390x
      dist: bionic
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
      <<: *fleet_install_tasks
      <<: *fleet_script_tasks
      <<: *fleet_script_gnufortran_tasks
      after_success:
        - deactivate
